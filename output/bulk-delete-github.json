{
  "title": "Github のリポジトリを一括で削除する",
  "description": "Github API を使ってGithub の整理をする",
  "date": "2020-02-04T00:00:00.000Z",
  "tags": [
    "test"
  ],
  "bodyContent": "みなさんこんにちは。ただいま休職中で結構時間があります。自分のGithub のアカウントは2014年6月に作成されて以降もう6年が経とうとしています。整理整頓をしておらず、リポジトリ数が341個にまで増えてしまっていたので整理をしてみました。\n\n### Github REST API を使ってみる\n普段ウェブブラウザを通してGithub にアクセスしていますが、APIでの操作も可能です。Github のAPIのドキュメントはここにまとまっています。大変見やすいドキュメントに仕上がっているので、自分でREST API を設計するときには是非参考にしたいですね。例えば、特定のユーザ情報を取得したいときにはcurlで以下のように取得できます。\n\n``` text/\ncurl https://api.github.com/users/yoneda\n```\n\nドキュメントを見ればわかるように、特定のユーザのリポジトリを取得したいときは`https://api.github.com/users/:username/repos` にGETリクエストを、特定のユーザのフォロワーを取得したいときは`https://api.github.com/users/:username/followers` にGETリクエストを送ればOKです。\n\n\n### Python で複数のリポジトリを一括で削除する\nGithub REST API には、特定のリポジトリを削除する機能も用意されています。ドキュメント中の`DELETE /repos/:owner/:repo`これは、`https://api.github.com/users/:username/repos`にDELETEリクエストを送れば、そのリポジトリが削除できることを意味します。例えば、ユーザー名がtanakaで、リポジトリ名がjanken-appだった場合は、`https://api.github.com/users/tanaka/janken-app` となります。削除が成功すれば、ResponseのStatusは204が返ってきます。この操作には管理者権限が必要で、OAuth認証が必須であることに注意が必要です。Python で複数のリポジトリを削除するスクリプトを書いてみました。\n\n```python/\n# coding:utf-8\nimport requests\n\nrepos = [\"repo1\", \"repo2\", \"repo3\"]\nurl = \"https://api.github.com/repos/yoneda/\"\nheaders = {\"Authorization\":\"token [enter your token]\"}\nfor repo in repos:\n  r = requests.delete(url+repo, headers=headers)\n  if r.status_code==204:\n    print(f\"delete succeeded! {repo}\")\n```\n\n### 整理した感想\nリポジトリを整理した結果、341個あったリポジトリが22個になりました。\n削除したリポジトリには以下のような特徴がありました。\n* 特定の技術を勉強するためだけにつくったもの\n* リポジトリを作成したものの何もしてないもの\n* 技術書を写経するときに使ったもの\n\nプログラミングを勉強しはじめた頃は右も左もわからないので、\nとりあえずリポジトリを作成してcontributionsが緑に変わって満足している自分がいました。\n最近では考え方が変わってきて、\n\n* よく利用されているライブラリに修正のリクエストを送る\n* よく利用されているライブラリの議論に参加する\n* 自らユーザの課題を解決するプロジェクトをはじめる\n\nGithub に正しい使い方などはないです。自分の勉強のために使うより、身近な技術的/社会的な課題を解決するために使ったほうが有意義じゃないでしょうか。今後は、自分の好きなライブラリの開発に参加したり、著名なドキュメントの翻訳をしたりしていきたいですね。\n\nそれでは、みなさん良いGithubライフを✋",
  "bodyHtml": "<p>みなさんこんにちは。ただいま休職中で結構時間があります。自分のGithub のアカウントは2014年6月に作成されて以降もう6年が経とうとしています。整理整頓をしておらず、リポジトリ数が341個にまで増えてしまっていたので整理をしてみました。</p>\n<h3>Github REST API を使ってみる</h3>\n<p>普段ウェブブラウザを通してGithub にアクセスしていますが、APIでの操作も可能です。Github のAPIのドキュメントはここにまとまっています。大変見やすいドキュメントに仕上がっているので、自分でREST API を設計するときには是非参考にしたいですね。例えば、特定のユーザ情報を取得したいときにはcurlで以下のように取得できます。</p>\n<pre><code class=\"hljs\">curl https://api.github.com/users/yoneda</code></pre><p>ドキュメントを見ればわかるように、特定のユーザのリポジトリを取得したいときは<code>https://api.github.com/users/:username/repos</code> にGETリクエストを、特定のユーザのフォロワーを取得したいときは<code>https://api.github.com/users/:username/followers</code> にGETリクエストを送ればOKです。</p>\n<h3>Python で複数のリポジトリを一括で削除する</h3>\n<p>Github REST API には、特定のリポジトリを削除する機能も用意されています。ドキュメント中の<code>DELETE /repos/:owner/:repo</code>これは、<code>https://api.github.com/users/:username/repos</code>にDELETEリクエストを送れば、そのリポジトリが削除できることを意味します。例えば、ユーザー名がtanakaで、リポジトリ名がjanken-appだった場合は、<code>https://api.github.com/users/tanaka/janken-app</code> となります。削除が成功すれば、ResponseのStatusは204が返ってきます。この操作には管理者権限が必要で、OAuth認証が必須であることに注意が必要です。Python で複数のリポジトリを削除するスクリプトを書いてみました。</p>\n<pre><code class=\"hljs\"># coding:utf-8\nimport requests\n\nrepos = [\"repo1\", \"repo2\", \"repo3\"]\nurl = \"https://api.github.com/repos/yoneda/\"\nheaders = {\"Authorization\":\"token [enter your token]\"}\nfor repo in repos:\n  r = requests.delete(url+repo, headers=headers)\n  if r.status_code==204:\n    print(f\"delete succeeded! {repo}\")</code></pre><h3>整理した感想</h3>\n<p>リポジトリを整理した結果、341個あったリポジトリが22個になりました。\n削除したリポジトリには以下のような特徴がありました。</p>\n<ul>\n<li>特定の技術を勉強するためだけにつくったもの</li>\n<li>リポジトリを作成したものの何もしてないもの</li>\n<li>技術書を写経するときに使ったもの</li>\n</ul>\n<p>プログラミングを勉強しはじめた頃は右も左もわからないので、\nとりあえずリポジトリを作成してcontributionsが緑に変わって満足している自分がいました。\n最近では考え方が変わってきて、</p>\n<ul>\n<li>よく利用されているライブラリに修正のリクエストを送る</li>\n<li>よく利用されているライブラリの議論に参加する</li>\n<li>自らユーザの課題を解決するプロジェクトをはじめる</li>\n</ul>\n<p>Github に正しい使い方などはないです。自分の勉強のために使うより、身近な技術的/社会的な課題を解決するために使ったほうが有意義じゃないでしょうか。今後は、自分の好きなライブラリの開発に参加したり、著名なドキュメントの翻訳をしたりしていきたいですね。</p>\n<p>それでは、みなさん良いGithubライフを✋</p>\n",
  "dir": "output",
  "base": "bulk-delete-github.json",
  "ext": ".json",
  "sourceBase": "bulk-delete-github.md",
  "sourceExt": ".md"
}